from django.db import models
from taggit.managers import TaggableManager

from asnet.models import NetworkService
from asnet.models.external_url import ExternalURL


class Vulnerability(models.Model):
    """
        Represents a known vulnerability affecting network assets.

        Stores information about the vulnerability's identifier, description,
        severity, discovery date, patching status, and relevant notes.
        """

    identifier = models.CharField(
        "Identifier",
        max_length=100,
        unique=True,
        help_text="A unique identifier for the vulnerability (e.g., CVE-2023-1234)",
    )

    description = models.TextField(
        "Description",
        help_text="A detailed description of the vulnerability's nature and impact",
    )

    severity = models.CharField(
        "Severity",
        max_length=50,
        help_text="The severity level of the vulnerability (e.g., Critical, High, Medium, Low)",
    )

    date_discovered = models.DateField(
        "Date Discovered",
        help_text="The date the vulnerability was first discovered",
    )

    date_patched = models.DateField(
        "Date Patched",
        null=True,
        blank=True,
        help_text="The date a patch or mitigation was released, if applicable",
    )

    is_patched = models.BooleanField(
        "Is Patched",
        default=False,
        help_text="Indicates whether a patch or mitigation is available for the vulnerability",
    )

    notes = models.TextField(
        "Notes",
        blank=True,
        help_text="Additional notes or information about the vulnerability",
    )

    external_urls = models.ManyToManyField(
        ExternalURL,
        blank=True,
        help_text="Links to external resources related to the vulnerability",
    )

    services = models.ManyToManyField(
        NetworkService,
        blank=True,
        related_name='vulnerabilities',
        verbose_name="Network Services",
        help_text="The network services affected by this vulnerability",
    )

    tags = TaggableManager()

    def __str__(self):
        return f"{self.identifier} - {self.severity}"

    class Meta:
        verbose_name = "Vulnerability"
        verbose_name_plural = "Vulnerabilities"
        ordering = ['severity', 'date_discovered']
